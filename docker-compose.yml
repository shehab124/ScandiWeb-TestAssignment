version: '3'
services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - www
    networks:
      - app-network

  www:
    build: ./backend
    volumes:
      - ./backend/:/var/www/html # Mount the backend directory to the container
    ports:
      - 80:80 # Map port 80 to port 80 on the host
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - APP_ENV=${APP_ENV:-development}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:5173,http://localhost:3000,http://localhost}
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: mysql:latest
    container_name: mysqlcontainer
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./db:/docker-entrypoint-initdb.d # sync seed data from host to container
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8001:80
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
